blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
shiny::runApp('Project')
community_club <- st_read("../data/community-clubs-kml.kml")
packages = c('shiny', 'shinythemes', 'leaflet', 'DT', 'sp', 'rgdal', 'rgeos', 'sf', 'tidyverse', 'tmap', 'maptools', 'raster','spatstat')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
community_club <- st_read("../data/community-clubs-kml.kml")
setwd("~/Documents/GitHub/GEO-Team-11")
community_club <- st_read("../data/community-clubs-kml.kml")
community_club <- st_read("../data/community-clubs-kml.kml")
setwd("~/Documents/GitHub/GEO-Team-11/data")
community_club <- st_read("../data/community-clubs-kml.kml")
cc <- data.frame(community_club$Description)
View(cc)
View(community_club)
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
ogrListLayers("data/community-clubs-kml.kml")
> ogrListLayers("../data/community-clubs-kml.kml")
ogrListLayers("../data/community-clubs-kml.kml")
ogrListLayers("../data/ELDERCARE.kml")
ogrListLayers("../data/chas-clinics-kml.kml")
ogrListLayers("../data/MP14_SUBZONE_WEB_PL.kml")
mpsz_sp <- readOGR("../data/MP14_SUBZONE_WEB_PL.kml",
layer = "MP14_SUBZONE_WEB_PL")
community_club <- readOGR("../data/geospatial/community-clubs-kml.kml",
"COMMUNITYCLUBS")
eldercare <- readOGR("../data/ELDERCARE.kml",
"ELDERCARE")
chas_clinics <- readOGR("../data/chas-clinics-kml.kml",
"MOH_CHAS_CLINICS")
community_club <- readOGR("../data/geospatial/community-clubs-kml.kml",
"COMMUNITYCLUBS")
ogrListLayers("../data/MP14_SUBZONE_WEB_PL.kml")
community_club <- readOGR("../data/community-clubs-kml.kml",
"COMMUNITYCLUBS")
View(chas_clinics)
View(chas_clinics)
View(community_club)
popdata <- read_csv("../data/respopagesextod2011to2020.csv")
population20 <- popdata %>%
filter(Time == 2020)
population20_tidy <- population20 %>%
group_by(PA, SZ, AG) %>%
summarise(`POP` = sum(`Pop`)) %>%
ungroup() %>%
pivot_wider(names_from = AG, values_from = POP) %>%
mutate(TOTAL = rowSums(.[3:21]))
pop_65above <- population20_tidy %>%
mutate(`65_Above` = as.integer(rowSums(.[16:21]))) %>%
mutate_at(.vars = vars(PA,SZ), .funs = funs(toupper))%>%
dplyr::select(PA, SZ, `65_Above`)
mpsz_svy21 <- spTransform(mpsz_sp,
CRS("+init=epsg:3414"))
mpsz_svy21 <- spTransform(mpsz_sp,
CRS("+init=epsg:3414"))
View(mpsz_svy21)
chas_clinics_svy21 <- spTransform(chas_clinics,
CRS("+init=epsg:3414"))
View(chas_clinics_svy21)
eldercare_svy21 <- spTransform(eldercare,
CRS("+init=epsg:3414"))
community_club_svy21 <- spTransform(community_club,
CRS("+init=epsg:3414"))
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
View(chas_clinics_svy21)
View(chas_clinics_svy21)
View(chas_clinics_svy21)
runApp('~/Documents/GitHub/GEO-Team-11/Project')
View(eldercare_svy21)
View(eldercare_svy21)
View(eldercare_svy21)
runApp('~/Documents/GitHub/GEO-Team-11/Project')
View(pop_65above)
View(popdata)
View(population20_tidy)
View(eldercare_svy21)
eldercare_svy21@data[["Description"]]
eldercare_svy21@data[["Name"]]
runApp('~/Documents/GitHub/GEO-Team-11/Project')
mapview(chas_clinics)
library(mapview)
library(rvest)
library(httr)
library(rvest)
library(httr)
attributes <- lapply(X = 1:nrow(chas_clinics),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
attributes <- lapply(X = 1:nrow(chas_clinics$Description),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
View(chas_clinics)
attributes <- lapply(X = 1:nrow(chas_clinics$Data),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
attributes <- lapply(X = 1:nrow(chas_clinics$Data.Description),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
attributes <- lapply(X = 1:nrow(chas_clinics@data[["Description"]]
),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
attributes <- lapply(X = 1:nrow(chas_clinics@data),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
attributes <- lapply(X = 1:nrow(chas_clinics@Data),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
attributes <- lapply(X = 1:nrow(chas_clinics@data),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
chas_clinics <- st_read("../data/chas-clinics-kml.kml")
chas_clinics3413 <- st_transform(chas_clinics, 3414)
attributes <- lapply(X = 1:nrow(chas_clinics),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
attributes <- lapply(X = 1:nrow(chas_clinics),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
attributes <- future.apply::future_lapply(X = 1:nrow(moh_chas_clinics),
FUN = function(x) {
moh_chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
View(attributes)
moh_chas_clinics_attr <-
chas_clinics %>%
bind_cols(bind_rows(attributes)) %>%
select(-Description)
moh_chas_clinics_attr <-
chas_clinics %>%
bind_cols(bind_rows(attributes)) %>%
dplyr::select(-Description)
View(moh_chas_clinics_attr)
# Load R packages
packages = c('shiny', 'shinythemes', 'leaflet', 'DT', 'sp', 'rgdal', 'rgeos', 'sf', 'tidyverse', 'tmap', 'maptools', 'raster','spatstat')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
# Import Data
popdata <- read_csv("../data/respopagesextod2011to2020.csv")
population20 <- popdata %>%
filter(Time == 2020)
population20_tidy <- population20 %>%
group_by(PA, SZ, AG) %>%
summarise(`POP` = sum(`Pop`)) %>%
ungroup() %>%
pivot_wider(names_from = AG, values_from = POP) %>%
mutate(TOTAL = rowSums(.[3:21]))
pop_65above <- population20_tidy %>%
mutate(`65_Above` = as.integer(rowSums(.[16:21]))) %>%
mutate_at(.vars = vars(PA,SZ), .funs = funs(toupper))%>%
dplyr::select(PA, SZ, `65_Above`)
mpsz <- st_read(dsn = "../data", layer = "MP14_SUBZONE_WEB_PL")
mpsz3414 <- st_transform(mpsz, 3414)
community_club <- st_read("../data/community-clubs-kml.kml")
community_club3414 <- st_transform(community_club, 3414)
eldercare <- st_read("../data/ELDERCARE.kml")
eldercare3414 <- st_transform(eldercare, 3414)
chas_clinics <- st_read("../data/chas-clinics-kml.kml")
chas_clinics3413 <- st_transform(chas_clinics, 3414)
chas_clinics_attributes <- lapply(X = 1:nrow(moh_chas_clinics),
FUN = function(x) {
moh_chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
chas_clinics_attributes <- lapply(X = 1:nrow(moh_chas_clinics),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
chas_clinics_attributes <- lapply(X = 1:nrow(moh_chas_clinics),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
chas_clinics_attributes <- lapply(X = 1:nrow(chas_clinics),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
View(chas_clinics_attributes)
View(chas_clinics_attributes)
chas_clinics_attributes <- has_clinics %>%
bind_cols(bind_rows(chas_clinics_attributes)) %>%
select(-Description)
chas_clinics_attributes <- chas_clinics %>%
bind_cols(bind_rows(chas_clinics_attributes)) %>%
select(-Description)
chas_clinics_attributes <- chas_clinics %>%
bind_cols(bind_rows(chas_clinics_attributes)) %>%
dplyr::select(-Description)
View(chas_clinics_attributes)
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp()
View(chas_clinics_attributes)
runApp()
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
View(chas_clinics_attributes)
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp()
runApp()
runApp()
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
View(eldercare)
runApp('~/Documents/GitHub/GEO-Team-11/Project')
eldercare_attributes <- lapply(X = 1:nrow(eldercare),
FUN = function(x) {
eldercare %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
eldercare_attributes <- eldercare %>%
bind_cols(bind_rows(eldercare_attributes)) %>%
dplyr::select(-Description)
eldercare_attributes <- lapply(X = 1:nrow(eldercare),
FUN = function(y) {
eldercare %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
eldercare_attributes <- lapply(X = 1:nrow(eldercare),
FUN = function(y) {
eldercare %>%
slice(y) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
View(eldercare)
View(chas_clinics)
View(community_club)
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
View(chas_clinics)
chas_clinics$Description
View(community_club)
View(community_club)
View(community_club3414)
View(community_club3414)
runApp('~/Documents/GitHub/GEO-Team-11/Project')
community_club.tibble()
chas_clinics$Description
community_club$Description
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
View(chas_clinics_attributes)
View(chas_clinics_attributes)
chas_clinics_attributes <- lapply(X = 1:nrow(chas_clinics),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
View(chas_clinics_attributes)
View(chas_clinics_attributes)
View(chas_clinics_attributes)
View(chas_clinics_attributes)
View(chas_clinics_attributes)
View(chas_clinics_attributes)
View(community_club3414)
chas_clinics_attributes <- lapply(X = 1:nrow(chas_clinics),
FUN = function(x) {
chas_clinics %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
View(chas_clinics_attributes)
View(chas_clinics_attributes)
View(chas_clinics_attributes)
community_club_attributes <- lapply(X = 1:nrow(community_club),
FUN = function(x) {
eldercare %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
community_club_attributes <- lapply(X = 1:nrow(community_club),
FUN = function(x) {
eldercare %>%
slice(x) %>%
pull(Description) %>%
read_html() %>%
html_node("table") %>%
html_table(header = TRUE, trim = TRUE, dec = ".", fill = TRUE) %>%
as_tibble(.name_repair = ~ make.names(c("Attribute", "Value"))) %>%
pivot_wider(names_from = Attribute, values_from = Value)
})
View(chas_clinics)
View(community_club)
chas_clinics %>%
glimpse()
community_club %>%
glimpse
runApp('~/Documents/GitHub/GEO-Team-11/Project')
runApp('~/Documents/GitHub/GEO-Team-11/Project')
blogdown:::preview_site(startup = TRUE)
shiny::runApp('Project')
runApp('Project')
runApp('Project')
packages = c('shiny', 'shinythemes', 'leaflet', 'DT', 'sp', 'rgdal', 'rgeos', 'sf', 'tidyverse', 'tmap', 'maptools', 'raster','spatstat')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
runApp('Project')
runApp('Project')
blogdown:::preview_site(startup = TRUE)
shiny::runApp('Project')
packages = c('shiny', 'shinythemes', 'leaflet', 'DT', 'sp', 'rgdal', 'rgeos', 'sf', 'tidyverse', 'tmap', 'maptools', 'raster','spatstat')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
runApp('Project')
runApp()
runApp('Project')
runApp('Project')
packages = c('shiny', 'shinythemes', 'leaflet', 'DT', 'sp', 'rgdal', 'rgeos', 'sf', 'tidyverse', 'tmap', 'maptools', 'raster','spatstat')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
runApp('Project')
